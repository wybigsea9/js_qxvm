e是https://qcaptcha.iqiyi.com/api/outer/verifycenter/initpage 这个post返回的数据，需要解密。无意中搜索这个post的参数时跟断点看到的 在https://security.iqiyi.com/static/verifycenter/js/verifycenter.js 这个js中：

搜索：cryptVersion


 cryptVersion: o[_0xe994("0xa04")]()  跟进去就是n.getVersion()再跟进去，16092下断点，上下看一下，往上翻就会看到 decrypt: function(e, x) { 在16055行



==============================================================================

e

decrypt: function(e, x) {
//..................删掉了一些没进去的
                                    var i = e.split("|"); //(2)?["41A6E7D777EB3D349907ECEFF7CC1E55D5A76D6D9DA6FC0B19…9B9DB532244AA45F27DA2172A54F10B5E39AE7413083117C8", "99BDF0D77B2FBC6FA7BC9D1F052BD44376FEB90FF1980DB0294649443AC43A75"]

 //..................删掉了一些没进去的

                                    if (f.validateForDecrypt (i.slice(0, i.length - 1), i.slice(-1)[0] ) {
                                        var n = f.aesDec(i[0]); // 到这里需要找 f.aesDec 跟断点到 16119 行下断点 --- 16140行，申明一下，aesDec之前是0x的那种，自己放到控制台输出看内容
                                        n.success ? (t[_0xe994("0x2a9")] = !0,
                                        t[_0xe994("0x390")] = _0xe994("0x882"),
                                        t[_0xe994("0xf")] = n[_0xe994("0xf")]) : t[_0xe994("0x390")] = _0xe994("0x883") + n.msg
                                    } else
                                        t[_0xe994("0x390")] = "signature not match";
                                    return x && x(t),
                                    t
                                }

======================================================================================

aesDec: function(e, x) {
                                    var t = {
                                        success: !1,
                                        data: "",
                                        msg: _0xe994("0x889")
                                    };
                                    if (!o)
                                        return t.msg = _0xe994("0x87b"),
                                        a[_0xe994("0x24")](t[_0xe994("0x390")]),
                                        x && x(t),
                                        t;
                                    if (!e)
                                        return t.msg = _0xe994("0x88a"),
                                        a[_0xe994("0x24")](t.msg),
                                        x && x(t),
                                        t;
                                    var i = r.decrypt(e); //这里是 16134行，[_0xe994("0x58d")] = decrypt跟进去 这个解密出来就是 【解密的数据】 里的文本，跟进去就是AES很明显iv、mode、padding
                                    return i ? (t[_0xe994("0x2a9")] = !0,
                                    t[_0xe994("0xf")] = i,
                                    t[_0xe994("0x390")] = _0xe994("0x88b")) : t[_0xe994("0x390")] = "aesDec fail",
                                    x && x(t),
                                    t
                                }

【解密的数据】：
"{"code":"A00000","msg":null,"data":{"captchaType":"slidecode","initData":{"token":"c0aa2a7b7c424be1adc893d4343fd251","captchaType":"slidecode","sourceType":"unUse","secondVerify":null,"secondToken":null,"secodVerify":null,"secodToken":null,"imageBgUrl":"/api/outer/image/bg/c0aa2a7b7c424be1adc893d4343fd251b6fbc662be8d4eec9065ecb3cbb6c565.jpg","imageBlockOffset":[[{"t1":4,"t2":0},{"t1":14,"t2":0},{"t1":3,"t2":0},{"t1":0,"t2":0},{"t1":13,"t2":0},{"t1":12,"t2":0},{"t1":9,"t2":0},{"t1":15,"t2":0},{"t1":11,"t2":0},{"t1":5,"t2":0},{"t1":1,"t2":0},{"t1":17,"t2":0},{"t1":18,"t2":0},{"t1":6,"t2":0},{"t1":2,"t2":0},{"t1":16,"t2":0},{"t1":7,"t2":0},{"t1":10,"t2":0},{"t1":8,"t2":0},{"t1":19,"t2":0}],[{"t1":9,"t2":1},{"t1":11,"t2":1},{"t1":12,"t2":1},{"t1":2,"t2":1},{"t1":17,"t2":1},{"t1":8,"t2":1},{"t1":6,"t2":1},{"t1":0,"t2":1},{"t1":16,"t2":1},{"t1":19,"t2":1},{"t1":14,"t2":1},{"t1":3,"t2":1},{"t1":1,"t2":1},{"t1":7,"t2":1},{"t1":18,"t2":1},{"t1":13,"t2":1},{"t1":5,"t2":1},{"t1":15,"t2":1},{"t1":4,"t2":1},{"t1":10,"t2":1}]],"imageWidth":290,"imageHeight":170,"imageBlockPerWidth":14,"imageBlockPerHeight":85,"iconUrl":"/api/outer/image/icon/c0aa2a7b7c424be1adc893d4343fd251b6fbc662be8d4eec9065ecb3cbb6c565.png","iconWidth":56,"iconHeight":56,"iconYOffset":60},"availableCaptchaList":[]}}"


==========================================================================================

下面是上面 16134行跟进来的AES处：这个函数是先 s.enc.Base64.stringify(s.enc.Hex.parse(e)) 自运行把数据解密一次，再进行aes解密

function decrypt(e) {  //15894行
return e ?
function a(e) {
var r = 'AXMGzD7fQ8zPkLaKBNLuCBwSHgZ2Zxr0'; //这个r值在自运行时取出来的
var x = r;
var f = 'qwertyuiopasdfgh';

    var t = s.enc.Utf8.parse(x),
    i = s.enc.Utf8.parse(f),
    n = s.AES.decrypt(e, t, {
        mode: s.mode.CBC,
        padding: s.pad.Pkcs7 ,
        iv: i
    }),
    _ = "";
    try {
        _ = n.toString(s.enc.Utf8)
    } catch(r) {
        o[_0xe994("0x4ae")](r),
        _ = !1
    }
    return _
} (s.enc.Base64.stringify(s.enc.Hex.parse(e)), r) : ""   //r值在 15878行  r = _0xe994("0x85d") ，r = 'AXMGzD7fQ8zPkLaKBNLuCBwSHgZ2Zxr0'，先自运行;
}








